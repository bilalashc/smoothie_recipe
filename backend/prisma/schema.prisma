// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Smoothie {
  id String @id @default(uuid())
  name String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ingredients SmoothieIngredient[]
  tags SmoothieTag[]

}

model Ingredient {
  id String @id @default(uuid())
  name String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  smoothies SmoothieIngredient[]
}

model SmoothieIngredient {
  smoothieId String
  ingredientId String
  quantity Float
  unit String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  smoothie Smoothie @relation(fields: [smoothieId], references: [id], onDelete: Cascade)
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])

  @@id([smoothieId, ingredientId])
}

model Tag {
  id String @id @default(uuid())
  name String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  smoothies SmoothieTag[]

}

model SmoothieTag {

  smoothieId String
  tagId String
  createdAt DateTime @default(now())

  smoothie Smoothie @relation(fields: [smoothieId], references: [id], onDelete: Cascade)
  tag Tag @relation(fields: [tagId], references: [id])

  @@id([smoothieId, tagId])
}







